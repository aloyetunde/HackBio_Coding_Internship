# Function to translate DNA to protein
def translate_dna(dna_seq): 
# Standard genetic code dictionary with full amino acid names
    codon_table = {
        'ATA': 'Isoleucine', 'ATC': 'Isoleucine', 'ATT': 'Isoleucine', 'ATG': 'Methionine',
        'ACA': 'Threonine', 'ACC': 'Threonine', 'ACG': 'Threonine', 'ACT': 'Threonine',
        'AAC': 'Asparagine', 'AAT': 'Asparagine', 'AAA': 'Lysine', 'AAG': 'Lysine',
        'AGC': 'Serine', 'AGT': 'Serine', 'AGA': 'Arginine', 'AGG': 'Arginine',
        'CTA': 'Leucine', 'CTC': 'Leucine', 'CTG': 'Leucine', 'CTT': 'Leucine',
        'CCA': 'Proline', 'CCC': 'Proline', 'CCG': 'Proline', 'CCT': 'Proline',
        'CAC': 'Histidine', 'CAT': 'Histidine', 'CAA': 'Glutamine', 'CAG': 'Glutamine',
        'CGA': 'Arginine', 'CGC': 'Arginine', 'CGG': 'Arginine', 'CGT': 'Arginine',
        'GTA': 'Valine', 'GTC': 'Valine', 'GTG': 'Valine', 'GTT': 'Valine',
        'GCA': 'Alanine', 'GCC': 'Alanine', 'GCG': 'Alanine', 'GCT': 'Alanine',
        'GAC': 'Aspartic acid', 'GAT': 'Aspartic acid', 'GAA': 'Glutamic acid', 'GAG': 'Glutamic acid',
        'GGA': 'Glycine', 'GGC': 'Glycine', 'GGG': 'Glycine', 'GGT': 'Glycine',
        'TCA': 'Serine', 'TCC': 'Serine', 'TCG': 'Serine', 'TCT': 'Serine',
        'TTC': 'Phenylalanine', 'TTT': 'Phenylalanine', 'TTA': 'Leucine', 'TTG': 'Leucine',
        'TAC': 'Tyrosine', 'TAT': 'Tyrosine', 'TAA': 'Stop', 'TAG': 'Stop', 'TGA': 'Stop'
    }

    protein = []
    
    # Iterate over the sequence in steps of 3 (codon size)
    for i in range(0, len(dna_seq) - 2, 3):
        codon = dna_seq[i:i+3]  # Extract codon
        amino_acid = codon_table.get(codon, 'Unknown')  # Translate, 'Unknown' if not found
        if amino_acid == 'Stop':  # Stop translation at stop codon
            break
        protein.append(amino_acid)

    return "-".join(protein)  # Join with hyphen for better readability

# Example DNA sequence
dna_sequence = "ATGGCTTTTCAAGGA"
protein_sequence = translate_dna(dna_sequence)
print("Protein Sequence:", protein_sequence)
