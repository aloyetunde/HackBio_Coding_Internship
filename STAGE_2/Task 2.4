import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the datasets
sift_dataset = "https://raw.githubusercontent.com/HackBio-Internship/public_datasets/main/R/datasets/sift.tsv"
foldx_dataset = "https://raw.githubusercontent.com/HackBio-Internship/public_datasets/main/R/datasets/foldX.tsv"

# Read the datasets
sift_df = pd.read_csv(sift_dataset, sep='\t')  # Corrected separator to tab
foldx_df = pd.read_csv(foldx_dataset, sep='\t')  # Corrected separator to tab

# Create specific_Protein_aa column by concatenating Protein and Amino_acid columns
sift_df["specific_Protein_aa"] = sift_df["Protein"] + "_" + sift_df["Amino_acid"]
foldx_df["specific_Protein_aa"] = foldx_df["Protein"] + "_" + foldx_df["Amino_acid"]

# Merge the two datasets using an inner join
merged_df = pd.merge(sift_df, foldx_df, on="specific_Protein_aa", how="inner")

# Identify deleterious mutations based on SIFT and FoldX criteria
deleterious_mutations = merged_df[(merged_df['SIFT_Score'] < 0.05) & (merged_df['FoldX_Score'] > 2)]

# Investigate amino acids in deleterious mutations
deleterious_aas = deleterious_mutations['Amino_acid']

# Generate a frequency table for all amino acids
aa_frequency = deleterious_aas.value_counts()

# Print amino acid frequency table
print(aa_frequency)

# Plotting the frequency of amino acids
plt.figure(figsize=(12, 6))

# Bar plot
plt.subplot(1, 2, 1)
sns.barplot(x=aa_frequency.index, y=aa_frequency.values)
plt.title('Frequency of Deleterious Amino Acids')
plt.xlabel('Amino Acids')
plt.ylabel('Frequency')
plt.xticks(rotation=45)

# Pie chart
plt.subplot(1, 2, 2)
plt.pie(aa_frequency, labels=aa_frequency.index, autopct='%1.1f%%', startangle=90)
plt.title('Proportion of Deleterious Amino Acids')

plt.tight_layout()
plt.show()

# Investigate the amino acid with the highest impact
highest_impact_aa = aa_frequency.idxmax()
highest_impact_count = aa_frequency.max()

print(f"Amino Acid with Highest Impact: {highest_impact_aa} (Frequency: {highest_impact_count})")

# Analyze structural and functional properties of amino acids with more than 100 occurrences
high_occurrence_aas = aa_frequency[aa_frequency > 100]
print("Amino Acids with more than 100 occurrences:")
print(high_occurrence_aas)


