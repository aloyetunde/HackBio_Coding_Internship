# Import required libraries
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Load dataset from URL
dataset_url = "https://raw.githubusercontent.com/HackBio-Internship/2025_project_collection/refs/heads/main/Python/Dataset/Pesticide_treatment_data.txt"
df = pd.read_csv(dataset_url, sep='\t')

# Rename the first column to 'Sample'
df.rename(columns={'Unnamed: 0': 'Sample'}, inplace=True)

# Extract metadata from 'Sample' column
df['Plant_Type'] = df['Sample'].apply(lambda x: 'WT' if 'WT' in x else 'Mutant')
df['Treatment'] = df['Sample'].apply(lambda x: 'DMSO' if 'DMSO' in x else 'Pesticide')
df['Time_Point'] = df['Sample'].apply(lambda x: '0h' if '_0_' in x else ('8h' if '8h' in x else '24h'))

# Compute ΔM (Metabolic Response Difference) for WT and Mutant
deltaM_df = pd.DataFrame({
    "Metabolite": df.columns[1:-3],  # Extract metabolite names
    "ΔM_WT": (df[df["Time_Point"] == "24h"][df["Plant_Type"] == "WT"].iloc[:, 1:-3].mean()
               - df[df["Treatment"] == "DMSO"][df["Plant_Type"] == "WT"].iloc[:, 1:-3].mean()),
    "ΔM_Mutant": (df[df["Time_Point"] == "24h"][df["Plant_Type"] == "Mutant"].iloc[:, 1:-3].mean()
                  - df[df["Treatment"] == "DMSO"][df["Plant_Type"] == "Mutant"].iloc[:, 1:-3].mean())
})

# Scatter plot of ΔM_WT vs. ΔM_Mutant
plt.figure(figsize=(10, 6))
plt.scatter(deltaM_df['ΔM_WT'], deltaM_df['ΔM_Mutant'], label='Metabolites')

# Plot y=x reference line
x = np.linspace(deltaM_df['ΔM_WT'].min(), deltaM_df['ΔM_WT'].max(), 100)
plt.plot(x, x, color='red', linestyle='--', label='y = x')

# Calculate residuals
deltaM_df['Residual'] = deltaM_df['ΔM_Mutant'] - deltaM_df['ΔM_WT']

# Define residual cutoff
residual_cutoff = 0.3

# Identify significant outliers
outliers = deltaM_df[abs(deltaM_df['Residual']) > residual_cutoff]
print("Metabolites outside the residual cutoff:")
print(outliers[['Metabolite', 'Residual']])

# Color points based on residuals
colors = ['salmon' if abs(res) > residual_cutoff else 'grey' for res in deltaM_df['Residual']]
plt.scatter(deltaM_df['ΔM_WT'], deltaM_df['ΔM_Mutant'], c=colors)

# Labels and title
plt.xlabel('ΔM WT')
plt.ylabel('ΔM Mutant')
plt.title('Scatter Plot of ΔM: WT vs. Mutant')
plt.legend()
plt.grid(True)
plt.show()

# Select 6 key outliers for time-series analysis
selected_metabolites = outliers.head(6)['Metabolite'].tolist()

# Time-series line plot for selected metabolites
plt.figure(figsize=(10, 6))

for metabolite in selected_metabolites:
    if metabolite in df.columns:
        wt_values = df[df["Plant_Type"] == "WT"].groupby("Time_Point")[metabolite].mean()
        mutant_values = df[df["Plant_Type"] == "Mutant"].groupby("Time_Point")[metabolite].mean()

        # Plot WT and Mutant trends
        plt.plot(wt_values.index, wt_values.values, marker='o', linestyle='-', label=f'WT - {metabolite}')
        plt.plot(mutant_values.index, mutant_values.values, marker='s', linestyle='--', label=f'Mutant - {metabolite}')

# Formatting the plot
plt.xlabel('Time (h)')
plt.ylabel('Metabolic Response')
plt.title('Metabolic Response Over Time for Selected Metabolites')
plt.legend()
plt.grid(True)
plt.show()
